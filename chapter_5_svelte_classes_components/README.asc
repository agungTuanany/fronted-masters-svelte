//{{{ ** ASCIIDOC HEADER
:description:   Front-end Masters course Svelte with Rich Harris | Chapter - 4
:url-repo:      https://github.com/agungTuanany/fronted-masters-svelte
:Author:        Agung Tuanany
:Email:         agung.tuanany@gmail.com
:Date:          Mon May  3 06:28:45 PM WIB 2021
:Revision:      -
:docinfo:
:docifnodir:
:prewrap!:
:figure-caption!:
:source-highlighter: highlight.js
//}}}

[[_chapter_5_class_and_components]]
== Chapter-5 Class and Components

//{{{ == Table of Contents
[[_table_of_contents]]
== Table of Contents

[cols="10h, ~"]
|====
| 1.    | xref:_classes_directive[Class Directive]
|====
//}}}

// {{{ 1 == Classes Directive
[[_classes_directive]]
== Classes Directive

//{{{ image::./images/chapter-5-1.png
[#img-chapter]
[link=./images/chapter-5-1.png,window=_blank]
.Class Directive
image::./images/chapter-5-1.png[align="center"]
//}}}

So just like any other attributes on the DOM - Elements, you can set the Class of
an Element use JavaScript inside curly braces (`"class={}"`).

But this is such common pattern that we have a special by directive for
classes. Specifically that allow you to toggle Classes based on some condition.

// {{{ === Classes / The Class Directive
=== Classes / The Class Directive

Just take a look in this App.svelte code below,

// {{{ app.svelte
[source, html]
----
// app.svelte
<script>
    let current = 'foo';
</script>

<button
    class="{current === 'foo' ? 'selected' : ''}"
    on:click="{() => current = 'foo'}"
>foo</button>

<button
    class="{current === 'bar' ? 'selected' : ''}"
    on:click="{() => current = 'bar'}"
>bar</button>

<button
    class="{current === 'baz' ? 'selected' : ''}"
    on:click="{() => current = 'baz'}"
>baz</button>

<style>
...
...
</style>
----
// }}}

So, instead of having `{current === 'foo' ? 'active' : ''}`, we can just
replace that whole things with, `class:selected={current === 'foo'}`.

// {{{ app.svelte
[source, html]
----
// app.svelte
<script>
    let current = 'foo';
</script>


<button
    class:selected="{current === 'foo'}"
//  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    on:click="{() => current = 'foo'}"
>foo</button>

<button
    class:selected="{current === 'bar'}"
//  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    on:click="{() => current = 'bar'}"
>bar</button>

<button
    class:selected="{current === 'baz'}"
//  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    on:click="{() => current = 'baz'}"
>
    baz
</button>

<style>
...
...

    .selected {
/*  ~~~~~~~~~ */
        background-color: #ff3e00;
        color: white;
    }
</style>
----
// }}}

We apply that to all of those.

So now I will click on these the active - Class, which add this `background`
- style to the button, will get applied whenever this condition
`class:selected={current === 'foo'}` is `"true"` for each of the button intern,
and that's just less stuff to write.

//{{{ image::./images/gif/chapter-5-1.gif
[#img-chapter]
[link=./images/gif/chapter-5-1.gif,window=_blank]
.Classes / The Class Directive
image::./images/gif/chapter-5-1.gif[align="center"]
//}}}
// }}} ===

// {{{ === Classes / Shorthand Class Directive
[[_classes_shorthand_class_directive]]
=== Classes / Shorthand Class Directive

Just like with the `"bind:value"` shorthand , and the `"source=source"`
shorthand that we've already encountered.

You'll very often have a situation like this, Where the Class you're toggling
is the same as the name of the condition.

// {{{ App.svelte
[source, html]
----
// App.svelte
....
....

<div class:big={big}>
    some {big ? 'big' : 'small'} text
</div>

----
// }}}

So if you have something like this Class, `"class:big={big}"`,

We can get rid of the equals `" ={big}"` - part of that to be like,

// {{{ App.svelte
[source, html]
----
// App.svelte
....
....

<div class:big>
    some {big ? 'big' : 'small'} text
</div>

----
// }}}

Svelte will fill-in the blank for us.j
// }}} ===

**â¬†xref:_table_of_contents[back to top]**
// }}}
